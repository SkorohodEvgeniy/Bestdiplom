{
	"version": 3,
	"file": "last-jobs.css",
	"sources": [
		"../scss/last-jobs.scss",
		"../scss/inc/_index.scss",
		"../scss/inc/_variables.scss",
		"../scss/inc/_mixin.scss",
		"../scss/inc/_media.scss"
	],
	"sourcesContent": [
		"@import \"inc/index\";\r\n\r\n.na5ku-last-jobs-div {\r\n    font-size: 14px;\r\n    padding: 20px;\r\n\r\n    .last-works-desktop {\r\n        @include respond-below(sm) {\r\n            display: none;\r\n        }\r\n\r\n        .na5ku-last-jobs {\r\n            tbody tr td:nth-child(1),\r\n            thead tr th:nth-child(1) {\r\n                text-align: center;\r\n                width: 90px;\r\n            }\r\n\r\n            tbody tr td:nth-child(2),\r\n            thead tr th:nth-child(2) {\r\n                text-align: center;\r\n                width: 90px;\r\n            }\r\n\r\n            tbody tr td:nth-child(4),\r\n            thead tr th:nth-child(4) {\r\n                white-space: nowrap;\r\n                text-align: center;\r\n            }\r\n        }\r\n    }\r\n\r\n    .last-works-mobile {\r\n        @include respond-above(sm) {\r\n            display: none;\r\n        }\r\n\r\n        .na5ku-last-jobs-mobile {\r\n            .na5ku-job-item {\r\n                border: 1px solid gray;\r\n                margin-bottom: 15px;\r\n                padding: 5px;\r\n\r\n                .na5ku-name span {\r\n                    color: var(--na5ku-buttons-bg);\r\n                    font-weight: bold;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
		"@import \"variables\";\r\n@import \"mixin\";\r\n@import \"media\";",
		"$c-white: #fff;\r\n$c-grey: #f3f3f3;\r\n$c-green: #8faf40;\r\n$c-japanese-laurel: #009e0f;\r\n$c-guardsman-red: #cf0902;\r\n$c-cornflower-blue: #166291;\r\n$c-black: #000;",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}"
	],
	"names": [],
	"mappings": ";AAEA,AAAA,oBAAoB,CAAC;EACjB,SAAS,EAAE,IAAI;EACf,OAAO,EAAE,IAAI;CA8ChB;;AIYO,MAAM,EAAE,SAAS,EAAE,KAAK;;EJ5DhC,AAII,oBAJgB,CAIhB,mBAAmB,CAAC;IAEZ,OAAO,EAAE,IAAI;GAsBpB;;;;AA5BL,AAUY,oBAVQ,CAIhB,mBAAmB,CAKf,gBAAgB,CACZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC;AAVnC,oBAAoB,CAIhB,mBAAmB,CAKf,gBAAgB,CAEZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC,EAAE;EACrB,UAAU,EAAE,MAAM;EAClB,KAAK,EAAE,IAAI;CACd;;;AAdb,AAgBY,oBAhBQ,CAIhB,mBAAmB,CAKf,gBAAgB,CAOZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC;AAhBnC,oBAAoB,CAIhB,mBAAmB,CAKf,gBAAgB,CAQZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC,EAAE;EACrB,UAAU,EAAE,MAAM;EAClB,KAAK,EAAE,IAAI;CACd;;;AApBb,AAsBY,oBAtBQ,CAIhB,mBAAmB,CAKf,gBAAgB,CAaZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC;AAtBnC,oBAAoB,CAIhB,mBAAmB,CAKf,gBAAgB,CAcZ,KAAK,CAAC,EAAE,CAAC,EAAE,AAAA,UAAW,CAAA,CAAC,EAAE;EACrB,WAAW,EAAE,MAAM;EACnB,UAAU,EAAE,MAAM;CACrB;;AIUL,MAAM,EAAE,SAAS,EAAE,KAAK;;EJpChC,AA8BI,oBA9BgB,CA8BhB,kBAAkB,CAAC;IAEX,OAAO,EAAE,IAAI;GAepB;;;;AA/CL,AAoCY,oBApCQ,CA8BhB,kBAAkB,CAKd,uBAAuB,CACnB,eAAe,CAAC;EACZ,MAAM,EAAE,cAAc;EACtB,aAAa,EAAE,IAAI;EACnB,OAAO,EAAE,GAAG;CAMf;;;AA7Cb,AAyCgB,oBAzCI,CA8BhB,kBAAkB,CAKd,uBAAuB,CACnB,eAAe,CAKX,WAAW,CAAC,IAAI,CAAC;EACb,KAAK,EAAE,uBAAuB;EAC9B,WAAW,EAAE,IAAI;CACpB"
}