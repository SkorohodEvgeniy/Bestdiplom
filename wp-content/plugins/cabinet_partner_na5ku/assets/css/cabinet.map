{
	"version": 3,
	"file": "cabinet.css",
	"sources": [
		"../scss/cabinet.scss",
		"../scss/inc/_index.scss",
		"../scss/inc/_variables.scss",
		"../scss/inc/_mixin.scss",
		"../scss/inc/_media.scss",
		"../scss/pages/_examples.scss",
		"../scss/pages/_faq.scss"
	],
	"sourcesContent": [
		"@import \"inc/index\";\r\n@import \"pages/examples\";\r\n@import \"pages/faq\";",
		"@import \"variables\";\r\n@import \"mixin\";\r\n@import \"media\";",
		"$c-white: #fff;\r\n$c-grey: #f3f3f3;\r\n$c-green: #8faf40;\r\n$c-japanese-laurel: #009e0f;\r\n$c-guardsman-red: #cf0902;\r\n$c-cornflower-blue: #166291;\r\n$c-black: #000;",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}",
		".cabinet-examples {\r\n    background: #f9f9f9;\r\n    border: 1px solid var(--na5ku-main-color);\r\n    padding: 35px;\r\n\r\n    .row {\r\n        /*display: flex;*/\r\n        text-align: center;\r\n\r\n        @include respond-above(sm){\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: stretch;\r\n        }\r\n    }\r\n\r\n    .file-col {\r\n        text-align: center;\r\n        justify-content: center;\r\n\r\n        @include respond-above(sm){\r\n            display: flex;\r\n            flex-wrap: wrap;\r\n            align-items: stretch;\r\n        }\r\n    }\r\n\r\n\r\n    .file-link {\r\n        display: inline-block;\r\n        width: 100%;\r\n        max-width: 220px;\r\n        margin-bottom: 30px;\r\n\r\n        @include respond-above(sm){\r\n            display: flex;\r\n            align-items: stretch;\r\n            width: 100%;\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n\r\n    .file {\r\n        position: relative;\r\n        max-width: 220px;\r\n        height: 100%;\r\n        width: 100%;\r\n        /*padding-bottom: 30px;*/\r\n        text-align: left;\r\n        display: flex;\r\n        align-items: stretch;\r\n        flex-direction: column;\r\n\r\n        &:hover .file-desc {\r\n            background: var(--na5ku-main-color);\r\n        }\r\n    }\r\n\r\n    .file-desc {\r\n        height: 95px;\r\n        background: #ebeff2;\r\n        border-radius: 10px 10px 0 0;\r\n        display: grid;\r\n        flex-shrink: 0;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n    }\r\n\r\n    .file-info {\r\n        background: #fff;\r\n        border-radius: 0 0 10px 10px;\r\n        padding: 20px;\r\n        width: 100%;\r\n        height: inherit;\r\n\r\n        .file-title {\r\n            font-weight: bold;\r\n            font-size: 14px;\r\n            color: black;\r\n        }\r\n    }\r\n\r\n    .file-icon {\r\n        display: inline-block;\r\n\r\n        img {\r\n            width: 45px;\r\n            max-height: 65px;\r\n        }\r\n\r\n    }\r\n\r\n    .file-type {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 15px;\r\n        background: #ccd0d1;\r\n        font-weight: bold;\r\n        color: white;\r\n        font-size: 12px;\r\n        padding: 7px 15px 7px 15px;\r\n        border-radius: 25px 0 0 25px;\r\n    }\r\n\r\n    .file-download {\r\n        color: #c8c8c8;\r\n\r\n        .fa {\r\n            color: var(--na5ku-main-color);\r\n        }\r\n    }\r\n}\r\n\r\n",
		".main-content {\r\n    .faq .panel-faq {\r\n        border: 1px solid var(--na5ku-main-color);\r\n        border-radius: 5px;\r\n        background: white;\r\n        color: black;\r\n\r\n        .panel-heading {\r\n            padding: 15px 30px;\r\n\r\n            .collapsed {\r\n                .panel-title {\r\n                    font-weight: normal;\r\n                }\r\n            }\r\n\r\n            .arrow {\r\n                color: var(--na5ku-main-color);\r\n                float: right;\r\n                padding-top: 5px;\r\n                transition: linear 0.2s;\r\n                transform: rotate(180deg);\r\n            }\r\n\r\n            .collapsed .arrow {\r\n                transform: rotate(0deg);\r\n            }\r\n        }\r\n\r\n        img {\r\n            display: block;\r\n            text-align: center;\r\n            margin: auto;\r\n            max-width: 100%;\r\n            width: 550px;\r\n        }\r\n\r\n        a {\r\n            color: $c-black;\r\n            font-weight: bold;\r\n        }\r\n\r\n        .panel-body {\r\n            border: 0 !important;\r\n\r\n            a {\r\n                color: var(--na5ku-main-color);\r\n                font-weight: normal;\r\n                text-decoration: underline;\r\n\r\n                &:hover {\r\n                    text-decoration: none;\r\n                }\r\n            }\r\n        }\r\n\r\n        .panel-body {\r\n            border: 0 !important;\r\n        }\r\n    }\r\n}"
	],
	"names": [],
	"mappings": "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"
}