{
	"version": 3,
	"file": "na5ku-guest.css",
	"sources": [
		"../scss/na5ku-guest.scss",
		"../scss/inc/_index.scss",
		"../scss/inc/_variables.scss",
		"../scss/inc/_mixin.scss",
		"../scss/inc/_media.scss"
	],
	"sourcesContent": [
		"@import \"inc/index\";\r\n\r\n.modal.fade.in {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 1050;\r\n}\r\n\r\n.calculation-range,\r\n.calculation-range-uniq {\r\n    background: linear-gradient(to right, var(--na5ku-buttons-bg) 0%, #f3f3f3 0%);\r\n    width: 100%;\r\n    height: 20px;\r\n    -webkit-appearance: none;\r\n    outline: none !important;\r\n    border: 0 !important;\r\n\r\n    &::-moz-range-thumb,\r\n    &::-ms-thumb,\r\n    &::-webkit-slider-thumb {\r\n        box-shadow: 0 0 0px 5px var(--na5ku-buttons-bg);\r\n    }\r\n\r\n    @include reset-button;\r\n}\r\n\r\n.calculation-range-container,\r\n.calculation-range-uniq-container {\r\n    .calculation-range,\r\n    .calculation-range-uniq {\r\n\r\n        width: 100%;\r\n        height: 5px;\r\n        margin-bottom: 10px;\r\n        padding: 0;\r\n        cursor: pointer;\r\n        background: linear-gradient(to right, var(--na5ku-buttons-bg) 0%, $c-grey 0%);\r\n        color: transparent;\r\n        border-color: transparent;\r\n\r\n        &::-webkit-slider-thumb {\r\n            width: 8px;\r\n            height: 8px;\r\n            border-radius: 50%;\r\n            -webkit-appearance: none;\r\n            cursor: ew-resize;\r\n            background-color: $c-white;\r\n            box-shadow: 0 0 0px 5px var(--na5ku-buttons-bg);\r\n        }\r\n\r\n        &::-moz-range-thumb {\r\n            width: 8px;\r\n            height: 8px;\r\n            border-radius: 50%;\r\n            -webkit-appearance: none;\r\n            cursor: ew-resize;\r\n            background-color: $c-white;\r\n            box-shadow: 0 0 0px 5px var(--na5ku-buttons-bg);\r\n        }\r\n\r\n        &::-ms-thumb {\r\n            width: 8px;\r\n            height: 8px;\r\n            border-radius: 50%;\r\n            -webkit-appearance: none;\r\n            cursor: ew-resize;\r\n            background-color: $c-white;\r\n            box-shadow: 0 0 0px 5px var(--na5ku-buttons-bg);\r\n        }\r\n\r\n        &::-webkit-slider-runnable-track {\r\n            width: 100%;\r\n            cursor: pointer;\r\n            border-radius: 5px;\r\n            background-color: transparent;\r\n        }\r\n    }\r\n\r\n\r\n    .range-info {\r\n        color: #414141;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n\r\n        .range-result {\r\n            color: var(--na5ku-buttons-bg);\r\n            font-size: 30px;\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n}\r\n",
		"@import \"variables\";\r\n@import \"mixin\";\r\n@import \"media\";",
		"$c-white: #fff;\r\n$c-grey: #f3f3f3;\r\n$c-green: #8faf40;\r\n$c-japanese-laurel: #009e0f;\r\n$c-guardsman-red: #cf0902;\r\n$c-cornflower-blue: #166291;\r\n$c-black: #000;",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}",
		"@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}\r\n\r\n\r\n// A map of breakpoints.\r\n$breakpoints: (\r\n        xs: 576px,\r\n        sm: 768px,\r\n        md: 992px,\r\n        lg: 1200px,\r\n        xl: 1440px\r\n);\r\n\r\n\r\n\r\n// @include respond-above(sm) {}\r\n@mixin respond-above($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $breakpoint-value) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-below(sm) {}\r\n@mixin respond-below($breakpoint) {\r\n\r\n    // If the breakpoint exists in the map.\r\n    @if map-has-key($breakpoints, $breakpoint) {\r\n\r\n        // Get the breakpoint value.\r\n        $breakpoint-value: map-get($breakpoints, $breakpoint);\r\n\r\n        // Write the media query.\r\n        @media (max-width: ($breakpoint-value - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If the breakpoint doesn't exist in the map.\r\n    } @else {\r\n\r\n        // Log a warning.\r\n        @warn 'Invalid breakpoint: #{$breakpoint}.';\r\n    }\r\n}\r\n\r\n\r\n\r\n// @include respond-between(sm, md) {}\r\n@mixin respond-between($lower, $upper) {\r\n\r\n    // If both the lower and upper breakpoints exist in the map.\r\n    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\r\n\r\n        // Get the lower and upper breakpoints.\r\n        $lower-breakpoint: map-get($breakpoints, $lower);\r\n        $upper-breakpoint: map-get($breakpoints, $upper);\r\n\r\n        // Write the media query.\r\n        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\r\n            @content;\r\n        }\r\n\r\n        // If one or both of the breakpoints don't exist.\r\n    } @else {\r\n\r\n        // If lower breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $lower) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your lower breakpoint was invalid: #{$lower}.';\r\n        }\r\n\r\n        // If upper breakpoint is invalid.\r\n        @if (map-has-key($breakpoints, $upper) == false) {\r\n\r\n            // Log a warning.\r\n            @warn 'Your upper breakpoint was invalid: #{$upper}.';\r\n        }\r\n    }\r\n}\r\n\r\n@mixin backgrounds($url, $color) {\r\n    background: url($url) no-repeat $color;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n@mixin control-text {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n\r\n@mixin reset-button {\r\n    border: none;\r\n    outline: none;\r\n}"
	],
	"names": [],
	"mappings": "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"
}